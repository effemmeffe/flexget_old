variables: my_secrets.yml


schedules:
  # Run every task every 1 hour
  - tasks: '*'
    interval:
      hours: 1

#schedules:
#  - tasks: ['populate-*', 'clean-*', 'update-*']
#    schedule:
#      hour: 0
#  - tasks: ['purge-*', 'fill-*', '*-rss']
#    schedule:
#      minute: 0,30
#  - tasks: ['*-discover', '*-manual', final_actions]
#    schedule:
#      hour: '*/2'
#  - tasks: ['move-*', download-subtitles]
#    schedule:
#      minute: 15,45


web_server:
  bind: 0.0.0.0
  port: 5050
  web_ui: yes

##### TEMPLATES
#
templates:
  ##### global: Global config
  #
  global:
    no_entries_ok: yes
    pathscrub: windows
    free_space:
      path: '/{? folder.root ?}'
      space: 4096
    # Requires log_filter plugin
#    log_filter:
#      task:
#        - marked seen
#        - because quality already downloaded
#        - because episode has already been downloaded
#        - Task does not have any
#      move:
#        - left because it exceeds safety value
#        - does not exists (anymore)
#      urlrewriter:
#        - URL rewritten to
#      enzyme.mkv:
#        - Reading
#        - Processing
#      enzyme.parsers.ebml.core:
#        - ignored
#        - Maximum level
#      subliminal.video:
#        - Scanning video
#      parser_internal:
#        - appears to be an episode pack
#      content_size:
#        - rejecting
#      search_rss:
#        - Error
#      assume_quality:
#        - ""
#      utils.requests:
#        - Waiting

  ##### email-template: Mail config
  #
#  email-template:
#    email:
#      from: '{? gmail.user ?}'
#      to: '{? gmail.user ?}'
#      smtp_host: smtp.gmail.com
#      smtp_port: 465
#      smtp_username: '{? gmail.user ?}'
#      smtp_password: '{? gmail.password ?}'
#      smtp_tls: yes
#      smtp_ssl: yes

  ##### series-config-template: Series config
  #
  series-config-template:
    thetvdb_lookup: yes
    trakt_lookup: yes
    include: series.yml
    configure_series:
      from:
        entry_list: trakt-series
      settings:
        identified_by: ep
        timeframe: 16 hours
        target: hdtv 720p
        quality: webrip+ 720p
        propers: 16 hours
        specials: no
    content_size:
      min: 150
    content_filter:
      require:
        - '*.mkv'

  ##### movies-1080p-template: Movies config
  #
  movies-1080p-template:
    trakt_lookup: yes
    tmdb_lookup: yes
    movie_list: trakt-movies
    quality: 1080p webdl+
    content_size:
      min: 400
      max: 8000

  ##### movies-720p-template: Movies config
  #
  movies-720p-template:
    trakt_lookup: yes
    tmdb_lookup: yes
    movie_list: trakt-movies
    quality: 720p webdl+
    content_size:
      min: 400
      max: 5000

  ##### pushbullet-template: Pushbullet config
  #
#  pushbullet-template:
#    pushbullet:
#      api_key: '{? pushbullet.api ?}'
#      title: "[Flexget] {{task}}"
#      message: "{{title}}"
  pushbullet-template:
    notify:
      entries:
        title: "[Flexget] {{task}}"
        message: "{{title}}"
        via:
          - pushbullet:
              api_key: '{? pushbullet.api ?}'


  ##### regex-template: Common rejections
  #
  regex-template:
    regexp:
      reject:
        - (s|d)ub(s|bed|lado|titulado)?\b
        - \bdual\b
        - \b3d\b
        - \b(fr)(ench)?\b
        - \b(ita)(lian)?\b
        - \b(spa)(nish)?\b
        - \b(ger)(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
        - \bchs\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

  ##### torrents-template: Common torrents config
  #
  torrents-template:
    torrent_alive:
      min_seeds: 1
      reject_for: 15 minutes
#    magnets: no
    # Might need to disable if you are getting errors connecting to https sources
    # Can remove if you upgrade to python 2.7.9+ or install requests[security]
    #verify_ssl_certificates: no
    domain_delay:
      unblocked.la: 1 seconds

  ##### transmission-global-template: Transmission config
  #
  transmission-global-template:
    transmission:
      port: 9091
      host: '{? transmission.host ?}'
      username: '{? transmission.user ?}'
      password: '{? transmission.password ?}'
      main_file_only: yes
      include_subs: yes
      skip_files:
        - '*.nfo'
        - '*.sfv'
        - '*.txt'
        - '*[sS]ample*'
        - '*[tT]railer*'

  ##### transmission-series-template: Transmission series config
  #
  transmission-series-template:
    transmission:
      # thetvdb lookup
      content_filename: "{{tvdb_series_name|default(series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      path: "/{? folder.downseries ?}{{tvdb_series_name|default(series_name)|pathscrub}}/S{{tvdb_season|pad(2)}}/"

  ##### transmission-movies-template: Transmission movies config
  #
  transmission-movies-template:
    transmission:
#      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      path: "/{? folder.downmovies ?}{{movie_name|pathscrub}}"

  ##### disable-seen-retry-template: Disable builtins for some tasks
  #
  disable-seen-retry-template:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

  ##### series-metainfo-template: Series metainfo mainly for move and update tasks
  #
  series-metainfo-template:
    metainfo_series: yes
    thetvdb_lookup: yes
    trakt_lookup: yes

  ##### movies-metainfo-template: Movies metainfo mainly for move and update tasks
  #
  movies-metainfo-template:
    trakt_lookup: yes
    tmdb_lookup: yes
    parsing:
      movie: guessit


##### TASKS
#
tasks:
  ##### populate-series-db task: Populates the series database with the files on the library, to avoid duplicate downloads
  #
  populate-series-db:
    priority: 1
    interval: 4 hour
    template:
      - series-metainfo-template
    seen: local
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: '/{? folder.series ?}'
          retrieve: dirs
      settings:
        tracking: no


  ##### purge-series-list task: Purge the series list to allow full sync with trakt series list
  #
  purge-series-list:
    priority: 2
    template:
      - disable-seen-retry-template
    entry_list: trakt-series
    accept_all: yes
    list_remove:
      - entry_list: trakt-series


  ##### fill-series-list task: Fetch, format and output trakt series list to a custom entry list
  #
  fill-series-list:
    priority: 3
    template:
      - disable-seen-retry-template
      - series-metainfo-template
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.series ?}'
      type: shows
    accept_all: yes
#    plugin_priority:
#      # manipulate must fix the titles before metainfo_series.
#      manipulate: 255
#    manipulate:
#      - title:
#          replace:
#            regexp: '^[^a-z0-9]*11\.22\.63[^a-z0-9]*'
#            format: '11-22-63.'
    set:
      #title: "{{trakt_series_name|escape|replace('&#39;', '')}}"
      title: "{{tvdb_series_name|escape|replace('&#39;', '')}}"
      #title: "{{series_name|escape|replace('&#39;', '')}}"
    list_add:
      - entry_list: trakt-series


  ##### download-series-manual task: Download episodes from manually downloaded torrents
  #
  download-series-manual:
    priority: 4
    template:
      - disable-seen-retry-template
      - series-metainfo-template
      - transmission-global-template
      - transmission-series-template
#      - pushbullet-template
    filesystem:
      path: '/{? folder.watchseries ?}'
      mask: '*.torrent'
    parsing:
      series: guessit
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"


  ##### download-series-rss task: Download episodes from RSS feeds
  #
  download-series-rss:
    priority: 5
    template:
      - series-config-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-series-template
#      - pushbullet-template
    inputs:
#      - rss:
#          url: https://kickass.unblocked.la/tv/?rss=1
#          all_entries: yes
#      - rss:
#          url: https://kat.cr/tv/?rss=1
#          all_entries: yes
#      - rss:
#          url: https://kat.am/tv/?rss=1
#          all_entries: yes
#      - rss:
#          url: https://bitleechers.net/rss.php?cats=53,54,55,82&type=dl&passkey={? private.bitleechers_password ?}
#          all_entries: yes
      - rss:
          url: http://extratorrent.cc/rss.xml?type=popular&cid=8
          all_entries: yes


  ##### download-series-discover task: Discover and download older episodes and pilots from recently added series, set with interval to avoid spam
  #
  download-series-discover:
    priority: 6
    interval: 4 hour
    template:
      - series-config-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-series-template
#      - pushbullet-template
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
#        - next_series_episodes: yes
        - next_series_episodes:
            from_start: yes
        #- emit_series:
        #    from_start: yes
      from:
#        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
#        - search_rss: https://kat.cr/usearch/{{search_term}}/?rss=1
#        - search_rss: https://kat.am/usearch/{{search_term}}/?rss=1
#        - search_rss: https://bitleechers.net/rss.php?cats=53,54,55,82&type=dl&passkey={? private.bitleechers_password ?}
        - piratebay: yes
        - rarbg:
            category: [1, 18, 41]
        - extratorrent:
            category: tv


  ##### clean-movie-queue task: Remove manually movies downloaded from the movie queue and trakt list
  #
  clean-movie-queue:
    priority: 11
    interval: 2 hour
    template:
      - disable-seen-retry-template
      - movies-metainfo-template
    filesystem:
      path: '/{? folder.movies ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: '{? .trakt.account ?}'
          list: '{? trakt.movies ?}'
    parsing:
      movie: guessit


  ##### fill-movie-queue task: Fill the movie queue with movies from trakt list
  #
  fill-movie-queue:
    priority: 12
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.movies ?}'
      type: movies
      strip_dates: yes
    accept_all: yes
    list_add:
      - movie_list: trakt-movies


  ##### download-movies-manual task: Download movies manually downloaded torrents
  #
  download-movies-manual:
    priority: 15
    template:
      - disable-seen-retry-template
      - movies-metainfo-template
      - transmission-global-template
      - transmission-movies-template
#      - pushbullet-template
    filesystem:
      path: '/{? folder.watchmovies ?}'
      mask: '*.torrent'
    parsing:
      movie: guessit
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.movies ?}'


  ##### download-movies-1080p-discover task: Download 1080p movies
  #
  download-movies-1080p-discover:
    priority: 16
    interval: 2 hour
    template:
      - movies-1080p-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-movies-template
#      - pushbullet-template
    exists_movie:
      - '/{? folder.downmovies ?}'
      - '/{? folder.movies ?}'
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
        - piratebay: yes
        - rarbg:
            category: [44, 42]
#        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
#        - search_rss: https://kat.cr/usearch/{{search_term}}/?rss=1
#        - search_rss: https://kat.am/usearch/{{search_term}}/?rss=1
#    list_queue:
    list_match:
      from:
        - movie_list: trakt-movies
      single_match: yes
    list_remove:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.movies ?}'


  ##### download-movies-720p-discover task: Download 720p movies with 1 day delay from higher quality
  #
  download-movies-720p-discover:
    priority: 17
    interval: 4 hour
    delay: 1 day
    template:
      - movies-720p-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-movies-template
#      - pushbullet-template
    exists_movie:
      - '/{? folder.downmovies ?}'
      - '/{? folder.movies ?}'
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - movie_list: trakt-movies
      from:
#        - flexget_archive: [movies]
        - piratebay: yes
        - rarbg:
            category: [48, 45]

#        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
#        - search_rss: https://kat.cr/usearch/{{search_term}}/?rss=1
#        - search_rss: https://kat.am/usearch/{{search_term}}/?rss=1

    if:
      - tmdb_year > now.year - 1: reject
    #list_queue:
    list_match:
      from:
        - movie_list: trakt-movies
      single_match: yes
    list_remove:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.movies ?}'



  ##### move-series task: Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
  #
  move-series:
    free_space:
      path: '/{? folder.root ?}'
      space: 1024
    priority: 21
    template:
      - disable-seen-retry-template
      - series-metainfo-template
      - pushbullet-template
#      - email-template
    filesystem:
      path:
        - '/{? folder.downseries ?}'
        - '/{? folder.downmanual ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
# might be needed for some series, but causes issues with "name (year)" based series, like scandal
#    parsing:
#      series: guessit

#    plugin_priority:
#      # manipulate must fix the titles before metainfo_series.
#      manipulate: 255
#    manipulate:
#      - title:
#          replace:
#            regexp: '^[^a-z0-9]*11\.22\.63[^a-z0-9]*'
#            format: '11-22-63.'
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
        - RARBG.COM
    move:
      # tvdb lookup
      to: "/{? folder.series ?}{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{tvdb_season|pad(2)}}/"
      rename: "{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"

      along:
        extensions:
          - srt
          - sub
          - idx
          - en.srt
          - en.sub
        subdirs:
          - Subs
      clean_source: 1

    list_add:
      - subtitle_list:
          list: subtitles
          remove_after: 7 days
    exec:
      on_exit:
        for_accepted: find '/{? folder.downseries ?}'* -type d -empty -delete



  ##### move-movies task: Move movies from downloads folder to the movies folder, along with possible subtitles and adding the files to the subtitle queue
  #
  move-movies:
    free_space:
      path: '/{? folder.root ?}'
      space: 1024
    priority: 26
    template:
      - disable-seen-retry-template
      - movies-metainfo-template
      - pushbullet-template
#      - email-template
    filesystem:
      path:
        - '/{? folder.downmovies ?}'
        - '/{? folder.downmanual ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    parsing:
      movie: guessit
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
        - RARBG.COM
    move:
      # trakt lookup
      to: "/{? folder.movies ?}{{trakt_movie_name|pathscrub}} ({{trakt_movie_year}})"
      rename: "{{trakt_movie_name|pathscrub}} ({{trakt_movie_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"

      along:
        extensions:
          - srt
          - sub
          - idx
          - en.srt
          - en.sub
        subdirs:
          - Subs
      clean_source: 1
    list_add:
      - subtitle_list:
          list: subtitles
          remove_after: 7 days
    exec:
      on_exit:
        for_accepted: find '/{? folder.downmovies ?}'* -type d -empty -delete


  ##### download-subtitles task: Download subtitles for the previously queued files
  #
  # Might have issues until final release of subliminal 2.0, see: http://discuss.flexget.com/t/subliminal-error/2023/
  #
  download-subtitles:
    priority: 31
    template:
      - disable-seen-retry-template

#    subtitle_queue: emit
#    accept_all: yes

    subtitle_list:
      list: subtitles
    list_match:
      from:
        - subtitle_list:
            list: subtitles
    subliminal:
      exact_match: no
      single: no
      languages:
        - it
        - en
      providers:
        - opensubtitles
        - addic7ed
        - podnapisi
        - thesubdb
        - tvsubtitles


  ##### clean-transmission task: Clean finished torrents from transmission
  #
  clean-transmission:
    priority: 33
#    disable: details
    clean_transmission:
      port: 9091
      host: '{{ secrets.transmission.host }}'
      username: '{{ secrets.transmission.user }}'
      password: '{{ secrets.transmission.password }}'
      transmission_seed_limits: no


  ##### update-series-list task: Update trakt series list and thetvdb series list from local series folders, excluding the ones that already ended
  #
  update-series-list:
    priority: 41
    interval: 1 day
    template:
      - disable-seen-retry-template
      - series-metainfo-template
    seen: local
    plugin_priority:
      if: -251
      manipulate: -252
      list_add: -253
    filesystem:
      path: '/{? folder.series ?}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    manipulate:
      - series_season:
          remove: yes
      - series_episode:
          remove: yes
      - title:
          replace:
            regexp: '$'
            format: ' S01E01'
    accept_all: yes
#    if:
#      - tvdb_status == 'Ended': reject
    list_add:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.series ?}'
          type: shows


  ##### clean-series-list-manual task
  #
  clean-series-list-manual:
    manual: yes
    #template:
    #  - series-metainfo-template
    trakt_lookup:
      account: '{? trakt.account ?}'
      username: '{? trakt.user ?}'
    trakt_list:
      account: '{? trakt.account ?}'
      list: '{? trakt.series ?}'
      type: shows
    disable: seen #is necessary to not get cross-contamination effects with caching
    if:
      - trakt_collected and trakt_series_status in ['ended', 'cancelled']: accept
    list_add:
      - trakt_list:
          account: '{? trakt.account ?}'
          list: '{? trakt.archive ?}'
          type: shows
    list_remove:
      - trakt_list:
          account: '{? .trakt.account ?}'
          list: '{? trakt.series ?}'


  ##### final_actions task: final actions
  #
  final_actions:
    priority: 100
    no_entries_ok: yes
    exec:
#      echo "Execution ended"
      kodi-upd.sh
