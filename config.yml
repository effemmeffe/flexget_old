secrets: my_secrets.yml


schedules:
  # Run every task every 1 hour
  - tasks: '*'
    interval:
      hours: 1


web_server:
  bind: 0.0.0.0
  port: 5050
api: yes
webui: yes

##### TEMPLATES
#
templates:
  ##### global: Global config
  #
  global:
    no_entries_ok: yes
    pathscrub: windows
    free_space:
      path: '/{{secrets.folder.root}}'
      space: 4096
    # Requires log_filter plugin
    log_filter:
      task:
        - marked seen
        - because quality already downloaded
        - because episode has already been downloaded
        - Task does not have any
      move:
        - left because it exceeds safety value
        - does not exists (anymore)
      urlrewriter:
        - URL rewritten to
      enzyme.mkv:
        - Reading
        - Processing
      enzyme.parsers.ebml.core:
        - ignored
        - Maximum level
      subliminal.video:
        - Scanning video
      parser_internal:
        - appears to be an episode pack
      content_size:
        - rejecting
      search_rss:
        - Error
      assume_quality:
        - ""
      utils.requests:
        - Waiting

  ##### email-template: Mail config
  #
  email-template:
    email:
      from: '{{ secrets.gmail.user }}'
      to: '{{ secrets.gmail.user }}'
      smtp_host: smtp.gmail.com
      smtp_port: 465
      smtp_username: '{{ secrets.gmail.user }}'
      smtp_password: '{{ secrets.gmail.password }}'
      smtp_tls: yes
      smtp_ssl: yes

  ##### series-config-template: Series config
  #
  series-config-template:
    thetvdb_lookup: yes
    trakt_lookup: yes
    include: series.yml
    configure_series:
      from:
        entry_list: trakt-series
      settings:
        identified_by: ep
        timeframe: 15 minutes
        target: hdtv 720p
        quality: webrip+ 720p
        propers: 16 hours
        specials: no
    content_size:
      min: 350
    content_filter:
      require:
        - '*.mkv'
#    archive: [episodes]

  ##### movies-1080p-template: Movies config
  #
  movies-1080p-template:
    trakt_lookup: yes
    tmdb_lookup: yes
    movie_list: trakt-movies
    quality: 1080p webdl+
    content_size:
      min: 1000
      max: 8000
#    archive: [movies]

  ##### movies-720p-template: Movies config
  #
  movies-720p-template:
    trakt_lookup: yes
    tmdb_lookup: yes
    movie_list: trakt-movies
    quality: 720p webdl+
    content_size:
      min: 500
      max: 3000
#    archive: [movies]

  ##### pushbullet-template: Pushbullet config
  #
  pushbullet-template:
    pushbullet:
      apikey: '{{secrets.pushbullet.api}}'
      title: "[Flexget] {{task}}"
      body: "{{title}}"

  ##### regex-template: Common rejections
  #
  regex-template:
    regexp:
      reject:
        - (s|d)ub(s|bed|lado|titulado)?\b
        - \bdual\b
        - \b3d\b
        - \b(fr)(ench)?\b
        - \b(ita)(lian)?\b
        - \b(spa)(nish)?\b
        - \b(ger)(man)?\b
        - \bcastellano\b
        - \brus(sian)?\b
        - \bchs\b
    content_filter:
      reject:
        - '*.rar'
        - '*.zip'

  ##### torrents-template: Common torrents config
  #
  torrents-template:
    torrent_alive:
      min_seeds: 1
      reject_for: 15 minutes
    magnets: no
    # Might need to disable if you are getting errors connecting to https sources
    # Can remove if you upgrade to python 2.7.9+ or install requests[security]
    #verify_ssl_certificates: no
    domain_delay:
      torrentz.eu: 1 seconds
      unblocked.la: 1 seconds

  ##### transmission-global-template: Transmission config
  #
  transmission-global-template:
    transmission:
      port: 9091
      host: '{{secrets.transmission.host}}'
      username: '{{secrets.transmission.user}}'
      password: '{{secrets.transmission.password}}'
#      host: localhost
#      username: transmission
#      password: transmission
      main_file_only: yes
      include_subs: yes
      skip_files:
        - '*.nfo'
        - '*.sfv'
        - '*.txt'
        - '*[sS]ample*'
        - '*[tT]railer*'

  ##### transmission-series-template: Transmission series config
  #
  transmission-series-template:
    transmission:
      # trakt lookup
      #content_filename: "{{trakt_series_name|default(series_name)|pathscrub}} - {{trakt_ep_id|default(series_id)}}{% if trakt_ep_name|default(False) %}: - {{trakt_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      #path: "/{{secrets.folder.downseries}}{{trakt_series_name|default(series_name)|pathscrub}}/S{{trakt_season|pad(2)}}/"

      # thetvdb lookup
      content_filename: "{{tvdb_series_name|default(series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      path: "/{{secrets.folder.downseries}}{{tvdb_series_name|default(series_name)|pathscrub}}/S{{tvdb_season|pad(2)}}/"

      # builtin lookup
      #content_filename: "{{series_name|default(series_name)|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      #path: "/{{secrets.folder.downseries}}{{series_name|default(series_name)|pathscrub}}/S{{tvdb_season|pad(2)}}/"

  ##### transmission-movies-template: Transmission movies config
  #
  transmission-movies-template:
    transmission:
#      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"
      content_filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      path: "/{{secrets.folder.downmovies}}{{movie_name|pathscrub}}"

  ##### disable-seen-retry-template: Disable builtins for some tasks
  #
  disable-seen-retry-template:
    disable:
      - seen
      - seen_info_hash
      - retry_failed

  ##### series-metainfo-template: Series metainfo mainly for move and update tasks
  #
  series-metainfo-template:
    metainfo_series: yes
    thetvdb_lookup: yes
    trakt_lookup: yes

  ##### movies-metainfo-template: Movies metainfo mainly for move and update tasks
  #
  movies-metainfo-template:
    trakt_lookup: yes
    tmdb_lookup: yes
    parsing:
      movie: guessit


##### TASKS
#
tasks:

  ##### populate-series-db-task: Populates the series database with the files on the library, to avoid duplicate downloads
  #
  populate-series-db-task:
    priority: 1
    interval: 4 hour
    template:
      - series-metainfo-template
    seen: local
    filesystem:
      path: '/{{secrets.folder.series}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    configure_series:
      from:
        filesystem:
          path: '/{{secrets.folder.series}}'
          retrieve: dirs
      settings:
        tracking: no


  ##### purge-series-list-task: Purge the series list to allow full sync with trakt series list
  #
  purge-series-list-task:
    priority: 2
    template:
      - disable-seen-retry-template
    entry_list: trakt-series
    accept_all: yes
    list_remove:
      - entry_list: trakt-series


  ##### fill-series-list-task: Fetch, format and output trakt series list to a custom entry list
  #
  fill-series-list-task:
    priority: 3
    template:
      - disable-seen-retry-template
      - series-metainfo-template
    trakt_list:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.series}}'
      type: shows
    accept_all: yes
    plugin_priority:
      # manipulate must fix the titles before metainfo_series.
      manipulate: 255
    manipulate:
      - title:
          replace:
            regexp: '^[^a-z0-9]*11\.22\.63[^a-z0-9]*'
            format: '11-22-63.'
    set:
      #title: "{{trakt_series_name|escape|replace('&#39;', '')}}"
      title: "{{tvdb_series_name|escape|replace('&#39;', '')}}"
      #title: "{{series_name|escape|replace('&#39;', '')}}"
    list_add:
      - entry_list: trakt-series


  ##### download-series-manual-task: Download episodes from manually downloaded torrents
  #
  download-series-manual-task:
    priority: 4
#    manual: yes
    template:
      - disable-seen-retry-template
      - series-metainfo-template
      - transmission-global-template
      - transmission-series-template
#      - pushbullet-template
    filesystem:
      path: '/{{secrets.folder.watchseries}}'
      mask: '*.torrent'
    parsing:
      series: guessit
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"


  ##### download-series-rss-task: Download episodes from RSS feeds
  #
  download-series-rss-task:
    priority: 5
    template:
      - series-config-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-series-template
#      - pushbullet-template
#    archive: [episodes]
    inputs:
#      - rss:
#          url: http://torrentz.eu/feedA?good&q=tv
#          all_entries: yes
#      - rss:
#          url: https://kickass.unblocked.la/tv/?rss=1
#          all_entries: yes
      - rss:
          url: https://kat.cr/tv/?rss=1
          all_entries: yes


  ##### download-series-discover-task: Discover and download older episodes and pilots from recently added series, set with interval to avoid spam
  #
  download-series-discover-task:
    priority: 6
    interval: 4 hour
    template:
      - series-config-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-series-template
#      - pushbullet-template
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - emit_series:
            from_start: yes
      from:
        - torrentz: good
#        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
        - search_rss: https://kat.cr/usearch/{{search_term}}/?rss=1


  ##### clean-movie-queue-task: Remove manually movies downloaded from the movie queue and trakt list
  #
  clean-movie-queue-task:
    priority: 11
    interval: 2 hour
    template:
      - disable-seen-retry-template
      - movies-metainfo-template
    filesystem:
      path: '/{{secrets.folder.movies}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    accept_all: yes
    list_remove:
      - movie_list: trakt-movies
      - trakt_list:
          account: '{{secrets.trakt.account}}'
          list: '{{secrets.trakt.movies}}'
    parsing:
      movie: guessit


  ##### fill-movie-queue-task: Fill the movie queue with movies from trakt list
  #
  fill-movie-queue-task:
    priority: 12
#    template:
#      - disable-seen-retry-template
#      - movies-metainfo-template
    trakt_list:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.movies}}'
      type: movies
      strip_dates: yes
    accept_all: yes
    list_add:
      - movie_list: trakt-movies


  ##### download-movies-manual-task: Download movies manually downloaded torrents
  #
  download-movies-manual-task:
    priority: 15
#    manual: yes
    template:
      - disable-seen-retry-template
      - movies-metainfo-template
      - transmission-global-template
      - transmission-movies-template
#      - pushbullet-template
    filesystem:
      path: '/{{secrets.folder.watchmovies}}'
      mask: '*.torrent'
    parsing:
      movie: guessit
    accept_all: yes
    exec:
      on_output:
        for_accepted: rm -f "{{location}}"
    list_remove:
      - trakt_list:
          account: '{{secrets.trakt.account}}'
          list: '{{secrets.trakt.movies}}'


  ##### download-movies-1080p-task: Download 1080p movies
  #
  download-movies-1080p-task:
    priority: 16
    interval: 2 hour
    template:
      - movies-1080p-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-movies-template
#      - pushbullet-template
    exists_movie:
      - '/{{secrets.folder.downmovies}}'
      - '/{{secrets.folder.movies}}'
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - trakt_list:
            account: '{{secrets.trakt.account}}'
            list: '{{secrets.trakt.movies}}'
            type: movies
            strip_dates: yes
      from:
        - torrentz: good
#        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
        - search_rss: https://kat.cr/usearch/{{search_term}}/?rss=1
    list_queue:
      - trakt_list:
          account: '{{secrets.trakt.account}}'
          list: '{{secrets.trakt.movies}}'
          type: movies
          strip_dates: yes


  ##### download-movies-720p-task: Download 720p movies with 1 day delay from higher quality
  #
  download-movies-720p-task:
    priority: 17
    interval: 4 hour
    delay: 1 day
    template:
      - movies-720p-template
      - regex-template
      - torrents-template
      - transmission-global-template
      - transmission-movies-template
#      - pushbullet-template
    exists_movie:
      - '/{{secrets.folder.downmovies}}'
      - '/{{secrets.folder.movies}}'
    discover:
      release_estimations: ignore
      interval: 15 minutes
      what:
        - trakt_list:
            account: '{{secrets.trakt.account}}'
            list: '{{secrets.trakt.movies}}'
            type: movies
            strip_dates: yes
      from:
#        - flexget_archive: [movies]
        - torrentz: good
#        - search_rss: https://kickass.unblocked.la/usearch/{{search_term}}/?rss=1
        - search_rss: https://kat.cr/usearch/{{search_term}}/?rss=1
    list_queue:
      - trakt_list:
          account: '{{secrets.trakt.account}}'
          list: '{{secrets.trakt.movies}}'
          type: movies
          strip_dates: yes



  ##### move-series-task: Move series from downloads folder to respective folders, along with existing subtitles and adding the files to the subtitle queue
  #
  move-series-task:
    priority: 21
    template:
      - disable-seen-retry-template
      - series-metainfo-template
      - pushbullet-template
#      - email-template
    filesystem:
      path:
        - '/{{secrets.folder.downseries}}'
        - '/{{secrets.folder.downmanual}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
# might be needed for some series, but causes issues with "name (year)" based series, like scandal
#    parsing:
#      series: guessit

    plugin_priority:
      # manipulate must fix the titles before metainfo_series.
      manipulate: 255
    manipulate:
      - title:
          replace:
            regexp: '^[^a-z0-9]*11\.22\.63[^a-z0-9]*'
            format: '11-22-63.'
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
    move:
      # trakt lookup
      #to: "/media/Tera/Library/TV/{{trakt_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{trakt_season|pad(2)}}/"
      #filename: "{{trakt_series_name|escape|replace('&#39;', '')|pathscrub}} - {{trakt_ep_id|default(series_id)}}{% if trakt_ep_name|default(False) %}: - {{trakt_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"

      # tvdb lookup
#      to: "/media/Tera/Library/TV/{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{tvdb_season|pad(2)}}/"
      to: "/{{secrets.folder.series}}{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}}/S{{tvdb_season|pad(2)}}/"
      filename: "{{tvdb_series_name|escape|replace('&#39;', '')|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"

      # builtin lookup
      #to: "/media/Tera/Library/TV/{{series_name|escape|replace('&#39;', '')|pathscrub}}/S{{series_season|pad(2)}}/"
      #filename: "{{series_name|escape|replace('&#39;', '')|pathscrub}} - {{tvdb_ep_id|default(series_id)}}{% if tvdb_ep_name|default(False) %}: - {{tvdb_ep_name|escape|replace('&#39;', '')|pathscrub}}{% endif %}{% if quality|default(False) %}: - [{{quality}}]{% endif %}{% if proper_count %} PROPER{% if proper_count > 1 %}{{proper_count}}{% endif %}{% endif %}"

      along:
        - srt
        - sub
        - en.srt
        - en.sub
      clean_source: 100
    subtitle_queue:
      action: add
      path: "{{output}}"
    exec:
      on_exit:
        for_accepted: find '/{{secrets.folder.downseries}}'* -type d -empty -delete



  ##### move-movies-task: Move movies from downloads folder to the movies folder, along with possible subtitles and adding the files to the subtitle queue
  #
  move-movies-task:
    priority: 26
    template:
      - disable-seen-retry-template
      - movies-metainfo-template
      - pushbullet-template
#      - email-template
    filesystem:
      path:
        - '/{{secrets.folder.downmovies}}'
        - '/{{secrets.folder.downmanual}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    parsing:
      movie: guessit
    accept_all: yes
    regexp:
      reject:
        - \btrailer\b
        - \bsample\b
    move:
      # builtin lookup
#      to: "/{{secrets.folder.movies}}{{movie_name|pathscrub}} ({{movie_year}})"
#      filename: "{{movie_name|pathscrub}} ({{movie_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"

      # trakt lookup
      to: "/{{secrets.folder.movies}}{{trakt_name|pathscrub}} ({{trakt_year}})"
      filename: "{{trakt_name|pathscrub}} ({{trakt_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"

      # tmdb lookup
#      to: "/{{secrets.folder.movies}}{{tmdb_name|pathscrub}} ({{tmdb_year}})"
#      filename: "{{tmdb_name|pathscrub}} ({{tmdb_year}}){% if quality|default(False) %}: - [{{quality}}]{% endif %}"
      along:
        - srt
        - sub
        - en.srt
        - en.sub
      clean_source: 100
    subtitle_queue:
      action: add
      path: "{{output}}"
    exec:
      on_exit:
        for_accepted: find '/{{secrets.folder.downmovies}}'* -type d -empty -delete


  ##### download-subtitles-task: Download subtitles for the previously queued files
  #
  # Might have issues until final release of subliminal 2.0, see: http://discuss.flexget.com/t/subliminal-error/2023/
  #
  download-subtitles-task:
    priority: 31
    template:
      - disable-seen-retry-template
    subtitle_queue: emit
    accept_all: yes
    subliminal:
      exact_match: no
      languages:
        - ita
        - eng
      providers:
        - opensubtitles
        - addic7ed
        - podnapisi
        - thesubdb
        - tvsubtitles


  ##### clean-transmission-task: Clean finished torrents from transmission
  #
  clean-transmission-task:
    priority: 33
    interval: 1 day
    disable: details
    clean_transmission:
      host: '{{ secrets.transmission.host }}'
      username: '{{ secrets.transmission.user }}'
      password: '{{ secrets.transmission.password }}'
      transmission_seed_limits: yes


  ##### update-series-list-task: Update trakt series list and thetvdb series list from local series folders, excluding the ones that already ended
  #
  update-series-list-task:
    priority: 41
    interval: 1 day
    template:
      - disable-seen-retry-template
      - series-metainfo-template
    seen: local
    plugin_priority:
      if: -251
      manipulate: -252
      list_add: -253
    filesystem:
      path: '/{{secrets.folder.series}}'
      recursive: yes
      retrieve: files
      regexp: '.*\.(avi|mkv|mp4)$'
    manipulate:
      - series_season:
          remove: yes
      - series_episode:
          remove: yes
      - title:
          replace:
            regexp: '^[^a-z0-9]*11\.22\.63[^a-z0-9]*'
            format: '11-22-63.'
    accept_all: yes
    if:
      - tvdb_status == 'Ended': reject
    list_add:
      - trakt_list:
          account: '{{secrets.trakt.account}}'
          list: '{{secrets.trakt.series}}'


  ##### clean-series-list-task: Clean the series that already ended from trakt series list and thetvdb series list
  #
  clean-series-list-task:
    priority: 43
    interval: 1 day
    delay: 8 day
    template:
      - disable-seen-retry-template
      - series-metainfo-template
      - pushbullet-template
    trakt_list:
      account: '{{secrets.trakt.account}}'
      list: '{{secrets.trakt.series}}'
      type: shows
    if:
      - tvdb_status == 'Ended': accept
    list_remove:
      - trakt_list:
          account: '{{secrets.trakt.account}}'
          list: '{{secrets.trakt.series}}'

  ##### final_actions-task: final actions
  #
  final_actions-task:
    priority: 100
    no_entries_ok: yes
    exec:
#      echo "Execution ended"
      kodi-upd.sh
